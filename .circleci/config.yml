
version: 2.1

workflows:
  playtime:
    jobs:
      - short-build
      - runner-test

aliases:
  - &buildImage cimg/node:14.16.0-browsers

jobs:
  runner-test:
    machine: true
    resource_class: danmux/runner-mbp
    steps:
      - run: echo "Hi I'm a Runner job on a macos MBP"
      - run:
          name: Clear working directory
          command: |
            rm -rf $CIRCLE_WORKING_DIRECTORY
            mkdir $CIRCLE_WORKING_DIRECTORY
      - run: mkdir -p /tmp/depcache; echo 'my cached file' > /tmp/depcache/cached.txt
      - save_cache:
          key: depcache-v1-{{ .BuildNum }}
          paths:
            - /tmp/depcache
      - run: rm -r /tmp/depcache
      - restore_cache:
          key: depcache-v1-{{ .BuildNum }}
      - run:
          name: Verify cache
          command: |
            [ "$(cat /tmp/depcache/cached.txt)" == 'my cached file' ]

      # upload artifacts!
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > /tmp/artifact-1.txt;
            mkdir -p /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2.txt;
      - store_artifacts:
          path: /tmp/artifact-1.txt
          destination: artifact-file.txt
      - store_artifacts:
          path: /tmp/artifacts

      # save some test results 
      - run:
          name: Create some test results
          command: |
            mkdir -p test-results
            mkdir -p test-results2
            cat \<<XML > test-results/junit.xml
            <testsuite tests="3">
              <testcase classname="foo1" name="ASuccessfulTest"/>
              <testcase classname="foo2" name="AnotherSuccessfulTest"/>
              <testcase classname="foo3" name="AFailingTest">
                <failure type="NotEnoughFoo"> details about failure </failure>
              </testcase>
            </testsuite>
            XML
            cp test-results/junit.xml test-results2/junit.xml
      - store_test_results:
          path: test-results
      - store_test_results:
          path: test-results2
      - store_artifacts:
          path: test-results

      # Persist a workspace
      - run: |
          echo "workspace" > workspace.txt
      - persist_to_workspace:
          root: .
          paths:
            - workspace.txt

  long-build:
    docker:
      - image: *buildImage
    steps:
      - run:
          command: |
            while true; do
              sleep 2
              ps auxwwf
              echo "=================="
            done
          background: true
      - run: sleep 10
      - run: echo "foo" 1>&2
      - run: sleep 10
      - run: sleep 10
      - run: sleep 10
      - run: sleep 200

  short-build:
    docker:
      - image: *buildImage
    steps:
      - run:
          command: |
            while true; do
              sleep 2
              ps auxwwf
              echo "=================="
            done
          background: true
      - run: sleep 10
      - run: echo "foo" 1>&2
      - run: sleep 10